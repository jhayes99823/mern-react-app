{"version":3,"sources":["components/create-todo.component.js","components/edit-todo.component.js","components/todo-list.component.js","App.js","serviceWorker.js","index.js"],"names":["CreateTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeTodoDescription","bind","assertThisInitialized","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","state","todo_description","todo_responsible","todo_priority","todo_completed","e","setState","target","value","preventDefault","console","log","concat","newTodo","Axios","post","then","res","data","react_default","a","createElement","style","marginTop","className","type","onChange","name","id","checked","Component","EditTodo","onChangeTodoCompleted","_this2","axios","get","match","params","response","catch","error","obj","history","push","htmlFor","Todo","todo","react_router_dom","to","_id","TodoList","todos","map","currentTodo","i","todo_list_component_Todo","key","todoList","App","href","react_router","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61044126.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Axios from 'axios';\n\nexport default class CreateTodo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        }\n    }\n\n    onChangeTodoDescription(e) {\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e) {\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n\n    onChangeTodoPriority(e) {\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        console.log('Form submitted:');\n        console.log(`Todo Description:  ${this.state.todo_description}`);\n        console.log(`Todo Responsible: ' ${this.state.todo_responsible}`);\n        console.log(`Todo Priority: ' ${this.state.todo_priority}`);\n        console.log(`Todo Completed: ' ${this.state.todo_completed}`);\n\n        const newTodo = {\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        };\n\n        Axios.post('http://localhost:4000/todos/add', newTodo)\n            .then(res => console.log(res.data));\n\n        this.setState({\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        })\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 10}}>\n            <h3>Create New Todo</h3>\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\"> \n                    <label>Description: </label>\n                    <input  type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.todo_description}\n                            onChange={this.onChangeTodoDescription}\n                            />\n                </div>\n                <div className=\"form-group\">\n                    <label>Responsible: </label>\n                    <input \n                            type=\"text\" \n                            className=\"form-control\"\n                            value={this.state.todo_responsible}\n                            onChange={this.onChangeTodoResponsible}\n                            />\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-check form-check-inline\">\n                        <input  className=\"form-check-input\" \n                                type=\"radio\" \n                                name=\"priorityOptions\" \n                                id=\"priorityLow\" \n                                value=\"Low\"\n                                checked={this.state.todo_priority==='Low'} \n                                onChange={this.onChangeTodoPriority}\n                                />\n                        <label className=\"form-check-label\">Low</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input  className=\"form-check-input\" \n                                type=\"radio\" \n                                name=\"priorityOptions\" \n                                id=\"priorityMedium\" \n                                value=\"Medium\" \n                                checked={this.state.todo_priority==='Medium'} \n                                onChange={this.onChangeTodoPriority}\n                                />\n                        <label className=\"form-check-label\">Medium</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input  className=\"form-check-input\" \n                                type=\"radio\" \n                                name=\"priorityOptions\" \n                                id=\"priorityHigh\" \n                                value=\"High\" \n                                checked={this.state.todo_priority==='High'} \n                                onChange={this.onChangeTodoPriority}\n                                />\n                        <label className=\"form-check-label\">High</label>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary\" />\n                </div>\n            </form>\n        </div>\n    )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/todos/'+this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    todo_description: response.data.todo_description,\n                    todo_responsible: response.data.todo_responsible,\n                    todo_priority: response.data.todo_priority,\n                    todo_completed: response.data.todo_completed\n                })\n            })\n            .catch(function(error) {\n                console.log(error)\n            })\n    }\n\n    onChangeTodoDescription(e) {\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e) {\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n\n    onChangeTodoPriority(e) {\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n\n    onChangeTodoCompleted(e) {\n        this.setState({\n            todo_completed: !this.state.todo_completed\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const obj = {\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        };\n        axios.post('http://localhost:4000/todos/update/'+this.props.match.params.id, obj)\n            .then(res => console.log(res.data));\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Update Todo</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.todo_description}\n                                onChange={this.onChangeTodoDescription}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Responsible: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.todo_responsible}\n                                onChange={this.onChangeTodoResponsible}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priorityOptions\"\n                                    id=\"priorityLow\"\n                                    value=\"Low\"\n                                    checked={this.state.todo_priority==='Low'}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priorityOptions\"\n                                    id=\"priorityMedium\"\n                                    value=\"Medium\"\n                                    checked={this.state.todo_priority==='Medium'}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priorityOptions\"\n                                    id=\"priorityHigh\"\n                                    value=\"High\"\n                                    checked={this.state.todo_priority==='High'}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n                        <div className=\"form-check\">\n                            <input  type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"completedCheckbox\"\n                                    name=\"completedCheckbox\"\n                                    onChange={this.onChangeTodoCompleted}\n                                    checked={this.state.todo_completed}\n                                    value={this.state.todo_completed}\n                                    />\n                            <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                                Completed\n                            </label>\n                        </div>\n                        <br/>\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Todo = props => (\n    <tr>\n        <td className={props.todo.todo_completed ? 'completed': ''}>\n            {props.todo.todo_description}\n        </td>\n        <td className={props.todo.todo_completed ? 'completed': ''}>\n            {props.todo.todo_responsible}\n        </td>\n        <td className={props.todo.todo_completed ? 'completed': ''}>\n            {props.todo.todo_priority}\n        </td>\n        <td>\n            <Link to={\"/edit/\"+props.todo._id}>\n                Edit\n            </Link>\n        </td>\n    </tr>\n)\n\nexport default class TodoList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/todos/')\n            .then(response => {\n                this.setState({\n                    todos: response.data\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    todoList() {\n        return this.state.todos.map(function(currentTodo, i) {\n            return <Todo todo={currentTodo} key={i}/>;\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Todo List</h3>\n                <table className=\"table table-striped\" style={{marginTop: 20}}>\n                    <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>Responsible</th>\n                            <th>Priority</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.todoList()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CreateTodo from \"./components/create-todo.component\";\nimport EditTodo from \"./components/edit-todo.component\";\nimport TodoList from \"./components/todo-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"https://codingthesmartway.com\" target=\"_blank\">\n              {/* <img src=\"https://www.google.com/url?sa=i&source=images&cd=&ved=2ahUKEwiHjOHdhLHjAhUFV80KHaZxDzsQjRx6BAgBEAU&url=https%3A%2F%2Fwww.udemy.com%2Freact-the-complete-guide-incl-redux%2F&psig=AOvVaw25Rf6CutsxaGwR2xXIf6ys&ust=1563077753020679\" width=\"30\" height=\"30\" alt=\"CodingTHeSmartWay.com\"/> */}\n            </a>\n            <Link to=\"/\" className=\"navbar-brand\">\n              MERN Stack Todo App\n            </Link>\n            <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">\n                    Todos\n                  </Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/create\" className=\"nav-link\">\n                    Create Todo\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <br/>\n          <Route path=\"/\" exact component={TodoList}/>\n          <Route path=\"/edit/:id\" component={EditTodo}/>\n          <Route path=\"/create\" component={CreateTodo}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}